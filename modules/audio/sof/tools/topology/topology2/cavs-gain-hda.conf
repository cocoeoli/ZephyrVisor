<include/common/vendor-token.conf>
<include/common/tokens.conf>
<include/components/host.conf>
<include/components/gain.conf>
<include/components/pipeline.conf>
<include/pipelines/cavs/gain-playback.conf>
<include/pipelines/cavs/gain-capture.conf>
<include/controls/mixer.conf>
<include/controls/bytes.conf>
<include/components/copier.conf>
<include/components/virtual.conf>
<include/common/data.conf>
<include/common/pcm.conf>
<include/common/pcm_caps.conf>
<include/common/fe_dai.conf>
<include/dais/hda.conf>
<include/dais/hw_config.conf>
<include/common/manifest.conf>
<include/common/pcm.conf>
<include/common/fe_dai.conf>
<include/common/pcm_caps.conf>
<include/common/route.conf>
Object.Dai {
	HDA.0 {
		name 'Analog Playback and Capture'
		id 4
		index 0
		default_hw_conf_id 4
		Object.Base.hw_config.HDA0 [
		]
		Object.Widget.copier.0 {
			direction playback
			index 1
			dai_index 1
			type dai_in
			dai_type "HDA"
			copier_type "HDA"
			stream_name 'Analog Playback and Capture'
			period_sink_count 0
			period_source_count 2
			format s32le
		}
		Object.Widget.copier.1 {
			direction capture
			index 2
			dai_index 2
			type dai_out
			dai_type "HDA"
                        copier_type "HDA"
			stream_name 'Analog Playback and Capture'
			dai_index 1
			period_sink_count 2
			period_source_count 0
			format s32le
		}
		direction duplex
	}
	HDA.1 {
		name 'Digital Playback and Capture'
		id 5
		index 0
		default_hw_conf_id 5
		Object.Base.hw_config.HDA1 [
		]
		Object.Widget.copier.0 {
			direction playback
			index 3
			dai_index 3
			type dai_in
			dai_type "HDA"
                        copier_type "HDA"
			stream_name 'Digital Playback and Capture'
			dai_index 2
			period_sink_count 0
			period_source_count 2
			format s32le
		}
		Object.Widget.copier.1 {
			direction capture
			index 4
			dai_index 4
			type dai_out
			dai_type "HDA"
                        copier_type "HDA"
			stream_name 'Digital Playback and Capture'
			dai_index 3
			period_sink_count 2
			period_source_count 0
			format s32le
		}
		direction duplex
	}
	HDA.4 {
		name iDisp1
		id 1
		index 0
		default_hw_conf_id 1
		Object.Base.hw_config.HDA4 [
		]
		Object.Widget.copier.0 {
			index 5
			dai_index 5
			type dai_in
			dai_type "HDA"
                        copier_type "HDA"
			stream_name iDisp1
			period_sink_count 0
			period_source_count 2
			format s32le
		}
		direction playback
	}
	HDA.5 {
		name iDisp2
		id 2
		index 0
		default_hw_conf_id 2
		Object.Base.hw_config.HDA5 [
		]
		Object.Widget.copier.0 {
			index 6
			dai_index 6
			type dai_in
			dai_type "HDA"
                        copier_type "HDA"
			stream_name iDisp2
			period_sink_count 0
			period_source_count 2
			format s32le
		}
		direction playback
	}
	HDA.6 {
		name iDisp3
		id 3
		index 0
		default_hw_conf_id 3
		Object.Base.hw_config.HDA6 [
		]
		Object.Widget.copier.0 {
			index 7
			dai_index 7
			type dai_in
			dai_type "HDA"
                        copier_type "HDA"
			stream_name iDisp3
			period_sink_count 0
			period_source_count 2
			format s32le
		}
		direction playback
	}
}
Object.Pipeline {
	gain-playback.1 {
		Object.Widget.pipeline.1 {
			stream_name 'copier.HDA.0.playback'
		}
		Object.Widget.copier.1{
			stream_name 'Gain Playback 0'
		}

		Object.Widget.gain.1{
			Object.Control.mixer.1 {
				name 'Main gain playback 0'
			}
		}

		format s16le
		index 1
	}
	gain-playback.3 {
		Object.Widget.pipeline.1 {
			stream_name 'copier.HDA.1.playback'
		}
		Object.Widget.copier.1{
			stream_name 'Gain Playback 1'
		}
                Object.Widget.gain.1{
                        Object.Control.mixer.1 {
                                name 'Main gain playback 1'
                        }
                }

		format s16le
		index 3
	}
	gain-playback.5 {
		Object.Widget.pipeline.1 {
			stream_name 'copier.HDA.4.playback'
		}
		Object.Widget.copier.1{
			stream_name 'Gain Playback 3'
		}
                Object.Widget.gain.1{
                        Object.Control.mixer.1 {
                                name 'Main gain playback 2'
                        }
                }

		format s16le
		index 5
	}
	gain-playback.6 {
		Object.Widget.pipeline.1 {
			stream_name 'copier.HDA.5.playback'
		}
		Object.Widget.copier.1{
			stream_name 'Gain Playback 4'
		}
                Object.Widget.gain.1{
                        Object.Control.mixer.1 {
                                name 'Main gain playback 3'
                        }
                }

		format s16le
		index 6
	}
	gain-playback.7 {
		Object.Widget.pipeline.1 {
			stream_name 'copier.HDA.6.playback'
		}
		Object.Widget.copier.1{
			stream_name 'Gain Playback 5'
		}
                Object.Widget.gain.1{
                        Object.Control.mixer.1 {
                                name 'Main gain playback 4'
                        }
                }

		format s16le
		index 7
	}
	gain-capture.2 {
		Object.Widget.pipeline.1 {
			stream_name 'copier.HDA.1.capture'
		}
		Object.Widget.copier.1{
			stream_name 'Gain Capture 0'
		}
                Object.Widget.gain.1{
                        Object.Control.mixer.1 {
                                name 'Main gain capture 0'
                        }
                }

		format s16le
		index 2
	}
	gain-capture.4 {
		Object.Widget.pipeline.1 {
			stream_name 'copier.HDA.3.capture'
		}
		Object.Widget.copier.1{
			stream_name 'Gain Capture 1'
		}
                Object.Widget.gain.1{
                        Object.Control.mixer.1 {
                                name 'Main gain capture 1'
                        }
                }

		format s16le
		index 4
	}
}
Object.PCM {
	pcm.0 {
		name 'HDA Analog'
		id 0
		Object.Base.fe_dai.'HDA Analog' [
		]
		Object.PCM.pcm_caps.playback {
			name 'Gain Playback 0'
			formats 'S24_LE,S16_LE'
		}
		Object.PCM.pcm_caps.capture {
			name 'Gain Capture 0'
			formats 'S24_LE,S16_LE'
		}
		direction duplex
	}
	pcm.1 {
		name 'HDA Digital'
		id 1
		Object.Base.fe_dai.'HDA Digital' [
		]
		Object.PCM.pcm_caps.playback {
			name 'Gain Playback 1'
			formats 'S24_LE,S16_LE'
		}
		Object.PCM.pcm_caps.capture {
			name 'Gain Capture 1'
			formats 'S24_LE,S16_LE'
		}
		direction duplex
	}
	pcm.3 {
		name HDMI1
		id 3
		Object.Base.fe_dai.HDMI1 [
		]
		Object.PCM.pcm_caps.playback {
			name 'Gain Playback 3'
			formats 'S24_LE,S16_LE'
		}
		direction playback
	}
	pcm.4 {
		name HDMI2
		id 4
		Object.Base.fe_dai.HDMI2 [
		]
		Object.PCM.pcm_caps.playback {
			name 'Gain Playback 4'
			formats 'S24_LE,S16_LE'
		}
		direction playback
	}
	pcm.5 {
		name HDMI3
		id 5
		Object.Base.fe_dai.HDMI3 [
		]
		Object.PCM.pcm_caps.playback {
			name 'Gain Playback 5'
			formats 'S24_LE,S16_LE'
		}
		direction playback
	}
}
Object.Base.route.1 {
	source 'copier.host.1.1'
	sink 'gain.1.1'
}
Object.Base.route.2 {
        source 'gain.1.1'
        sink 'copier.HDA.1.0'
}
Object.Base.route.3 {
	source 'copier.HDA.2.1'
	sink 'gain.2.1'
}
Object.Base.route.4 {
        source 'gain.2.1'
        sink 'copier.host.2.1'
}
Object.Base.route.5 {
	source 'copier.host.2.1'
	sink 'gain.3.1'
}
Object.Base.route.6 {
        source 'gain.3.1'
        sink 'copier.HDA.3.0'
}
Object.Base.route.7 {
	source 'copier.HDA.4.1'
	sink 'gain.4.1'
}
Object.Base.route.8 {
        source 'gain.4.1'
        sink 'copier.host.3.1'
}
Object.Base.route.9 {
	source 'copier.host.4.1'
	sink 'gain.5.1'
}
Object.Base.route.10 {
        source 'gain.5.1'
        sink 'copier.HDA.5.0'
}
Object.Base.route.11 {
	source 'copier.host.5.1'
	sink 'gain.6.1'
}
Object.Base.route.12 {
        source 'gain.6.1'
        sink 'copier.HDA.6.0'
}
Object.Base.route.13 {
	source 'copier.host.6.1'
	sink 'gain.7.1'
}
Object.Base.route.14 {
        source 'gain.7.1'
        sink 'copier.HDA.7.0'
}

Object.Widget.virtual {
	codec0_in {
		type input
		index 1
	}
	codec1_in {
		type input
		index 2
	}
	codec0_out {
		type output
		index 3
	}
	codec1_out {
		type output
		index 4
	}
	codec2_in {
		type input
		index 5
	}
	codec2_out {
		type output
		index 6
	}
	iDisp1_out {
		type output
		index 7
	}
	iDisp2_out {
		type output
		index 8
	}
	iDisp3_out {
		type output
		index 9
	}
	'iDisp3 Tx' {
		type out_drv
		index 0
	}
	'iDisp2 Tx' {
		type out_drv
		index 1
	}
	'iDisp1 Tx' {
		type out_drv
		index 2
	}
	'Analog CPU Playback' {
		type out_drv
		index 3
	}
	'Digital CPU Playback' {
		type out_drv
		index 4
	}
	'Alt Analog CPU Playback' {
		type out_drv
		index 5
	}
	'Analog CPU Capture' {
		type input
		index 6
	}
	'Digital CPU Capture' {
		type input
		index 7
	}
	'Alt Analog CPU Capture' {
		type input
		index 8
	}
}
